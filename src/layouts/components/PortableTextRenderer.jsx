// src/components/PortableTextRenderer.jsx
import React from 'react';
import { PortableText } from '@portabletext/react';

// =========================================================================
// ðŸŽ¯ DEFINISI KOMPONEN DENGAN STYLING ASLI (TANPA LOGIC TOC)
// =========================================================================
const components = {
Â  // 1. BLOCKS (Paragraf dan Heading)
Â  block: {
Â  Â  // Paragraf
Â  Â  normal: ({children}) => <p className="mb-4">{children}</p>,Â 
Â  Â Â 
Â  Â  // Headings (Dihapus ID dan CSS anti-scroll)
Â  Â  h2: ({children}) => <h2 className="h2 my-6 text-xl font-medium">{children}</h2>, 
Â  Â  h3: ({children}) => <h3 className="h3 my-5 text-lg font-medium">{children}</h3>,Â 
Â  Â  h4: ({children}) => <h4 className="h4 my-4 font-medium">{children}</h4>,Â 
Â  Â Â 
Â  Â  // Blockquote
Â  Â  blockquote: ({children}) => <blockquote className="border-l-4 border-primary pl-4 italic my-6">{children}</blockquote>,
Â  },
Â Â 
Â  // 2. LISTS
Â  list: {
Â  Â  bullet: ({children}) => <ul className="list-disc ml-6 my-4 space-y-2">{children}</ul>,
Â  Â  number: ({children}) => <ol className="list-decimal ml-6 my-4 space-y-2">{children}</ol>,
Â  },
Â  listItem: ({children}) => <li className="mb-1">{children}</li>,

Â  // 3. ANNOTATIONS (Link)
Â  marks: {
Â  Â  link: ({value, children}) => {
Â  Â  Â  const target = (value?.href || '').startsWith('http') ? '_blank' : undefined;
Â  Â  Â  return (
Â  Â  Â  Â  <aÂ 
Â  Â  Â  Â  Â  href={value?.href}Â 
Â  Â  Â  Â  Â  target={target}Â 
Â  Â  Â  Â  Â  rel={target === '_blank' ? 'noopener noreferrer' : undefined}Â 
Â  Â  Â  Â  Â  className="text-primary hover:text-dark"
Â  Â  Â  Â  >
Â  Â  Â  Â  Â  {children}
Â  Â  Â  Â  </a>
Â  Â  Â  );
Â  Â  },
Â  },
Â Â 
Â  // 4. EMBEDDED TYPES (Gambar)
Â  types: {
Â  Â  image: ({value}) => {
Â  Â  Â  Â  if (!value.asset || !value.asset._ref) return null;
Â  Â  Â  Â  const imageUrl = `URL_CDN_SANITY/${value.asset._ref.split('-')[1]}.${value.asset._ref.split('-')[2]}`;Â 
Â  Â  Â  Â Â 
Â  Â  Â  Â  return (
Â  Â  Â  Â  Â  Â  <imgÂ 
Â  Â  Â  Â  Â  Â  Â  Â  src={imageUrl}Â 
Â  Â  Â  Â  Â  Â  Â  Â  alt={value.alt || ''}Â 
Â  Â  Â  Â  Â  Â  Â  Â  className="my-6 rounded-lg w-full h-auto"Â 
Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  );
Â  Â  }
Â  }
};

const PortableTextRenderer = ({ content }) => {
Â  if (!content) return null;
Â Â 
Â  return (
Â  Â  <div className="portable-text-wrapper">
Â  Â  Â  <PortableText value={content} components={components} />
Â  Â  </div>
Â  );
};

export default PortableTextRenderer;